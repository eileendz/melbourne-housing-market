{
  "message": "object 'x_train' not found",
  "traceback": ["is_tensorflow_dataset(x)", "resolve_tensorflow_dataset(x)", "fit.keras.engine.training.Model(., x_train, y_train, validation_split = 0.3, \n    epoch = FLAGS$epoch, batch_size = FLAGS$batch_size, callbacks = early_stop)", "fit(., x_train, y_train, validation_split = 0.3, epoch = FLAGS$epoch, \n    batch_size = FLAGS$batch_size, callbacks = early_stop)", "function_list[[k]](value)", "withVisible(function_list[[k]](value))", "freduce(value, `_function_list`)", "`_fseq`(`_lhs`)", "eval(quote(`_fseq`(`_lhs`)), env, env)", "eval(quote(`_fseq`(`_lhs`)), env, env)", "withVisible(eval(quote(`_fseq`(`_lhs`)), env, env))", "model %>% fit(x_train, y_train, validation_split = 0.3, epoch = FLAGS$epoch, \n    batch_size = FLAGS$batch_size, callbacks = early_stop)", "eval(ei, envir)", "eval(ei, envir)", "withVisible(eval(ei, envir))", "tuning_run(\"house.R\", flags = list(dense_unit1 = c(2048, 1024, \n    512), dense_unit2 = c(1024, 512, 256), dense_unit3 = c(512, \n    256, 128), dense_unit4 = c(256, 128, 64), dropout = c(0.2), \n    learning_rate = c(0.001), batch_size = c(64, 128, 256, 512), \n    activation = c(\"relu\", \"tanh\")))"]
}
